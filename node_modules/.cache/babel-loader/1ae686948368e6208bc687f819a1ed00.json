{"ast":null,"code":"var _jsxFileName = \"/Users/yoonkijae/project/WEB/react_tutorial/client/src/App.js\";\nimport Customer from './components/Customer';\nimport CustomerAdd from './components/CustomerAdd';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    OverflowX: \"auto\"\n  },\n  table: {\n    minWidth: 1080\n  },\n  process: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customers: \"\",\n      completed: 0\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/customers');\n      const body = await response.json();\n      return body;\n    };\n\n    this.progress = () => {\n      const {\n        completed\n      } = this.state;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    this.callApi().then(res => this.setState({\n      customers: res\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" \\uBC88\\uD638 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" \\uC774\\uBBF8\\uC9C0 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" \\uC774\\uB984 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" \\uC0DD\\uB144\\uC6D4\\uC77C \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" \\uC131\\uBCC4 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" \\uC9C1\\uC5C5 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: this.state.customers ? this.state.customers.map(c => {\n              return /*#__PURE__*/_jsxDEV(Customer, {\n                id: c.id,\n                image: c.image,\n                name: c.name,\n                birthday: c.birthday,\n                gender: c.gender,\n                job: c.job\n              }, c.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: \"6\",\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: classes.progress,\n                  variant: \"determinate\",\n                  value: this.state.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomerAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/yoonkijae/project/WEB/react_tutorial/client/src/App.js"],"names":["Customer","CustomerAdd","Paper","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","withStyles","Component","styles","theme","root","width","marginTop","spacing","unit","OverflowX","table","minWidth","process","margin","App","state","customers","completed","callApi","response","fetch","body","json","progress","setState","componentDidMount","timer","setInterval","then","res","catch","err","console","log","render","classes","props","map","c","id","image","name","birthday","gender","job"],"mappings":"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","sourcesContent":["\nimport Customer from './components/Customer';\nimport CustomerAdd from './components/CustomerAdd';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\n\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport { Component } from 'react'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    OverflowX: \"auto\"\n  },\n  table: {\n    minWidth: 1080\n  },\n  process: {\n    margin: theme.spacing.unit * 2\n  }\n\n})\n\n\nclass App extends Component {\n\n  state = {\n    customers: \"\",\n    completed: 0\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    this.callApi()\n      .then(res => this.setState({ customers: res }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Paper className={classes.root}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell> 번호 </TableCell>\n                <TableCell> 이미지 </TableCell>\n                <TableCell> 이름 </TableCell>\n                <TableCell> 생년월일 </TableCell>\n                <TableCell> 성별 </TableCell>\n                <TableCell> 직업 </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {this.state.customers ? this.state.customers.map(c => {\n                return (<Customer key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />);\n              }) :\n                <TableRow>\n                  <TableCell colSpan=\"6\" align=\"center\">\n                    <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed} />\n                  </TableCell>\n                </TableRow>\n              }\n            </TableBody>\n          </Table>\n        </Paper>\n        <CustomerAdd/>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}